name: Deploy httpd in EKS

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        
      - name: Set variables
        run: |
          echo "CLUSTER_NAME=apache-test" >> $GITHUB_ENV
          echo "CONTAINER_IMAGE_VERSION=0.6" >> $GITHUB_ENV
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_KEY }}" >> $GITHUB_ENV
          echo "AWS_DEFAULT_REGION=us-east-1" >> $GITHUB_ENV
          echo "DOCKER_USER=${{ secrets.DOCKER_USER }}" >> $GITHUB_ENV
          echo "DOCKER_PASS=${{ secrets.DOCKER_PASS }}" >> $GITHUB_ENV

      - name: Build httpd container image
        run: |
          docker build ./ -t mtimoshchenko/mtim-test-ghact:$CONTAINER_IMAGE_VERSION

      - name: Docker login
        run: |
          echo "$DOCKER_PASS" | docker login -u $DOCKER_USER --password-stdin

      - name: Push image to DockerHub
        run: |
          docker push mtimoshchenko/mtim-test-ghact:$CONTAINER_IMAGE_VERSION

      - name: Installation AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install
          echo -e "#-----------------------------------#\nAWS CLI version is:\t"
          aws --version

      - name: AWS login
        run: |
          export AWS_ACCESS_KEY_ID="$AWS_ACCESS_KEY_ID"
          export AWS_SECRET_ACCESS_KEY="AWS_SECRET_ACCESS_KEY"
          export AWS_DEFAULT_REGION="AWS_DEFAULT_REGION"

      - name: Installing eksctl tool
        run: |
          curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
          sudo mv /tmp/eksctl /usr/local/bin
          echo -e "#-----------------------------------#\nEksctl version is:\t"
          eksctl version

      - name: Installing kubectl tool
        run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin
          echo -e "#-----------------------------------#\nKubectl version is:\t"
          kubectl version --client

      - name: Creation EKS cluster
        run: |
          eksctl create cluster -f apache-test-cluster.yaml
          echo -e "#-----------------------------------#\nCluster Info:\t"
          eksctl get nodegroup --cluster $CLUSTER_NAME

      - name: Verifying cluster created
        run: |
          aws eks --region $AWS_DEFAULT_REGION update-kubeconfig --name $CLUSTER_NAME
          echo -e "#-----------------------------------#\nCluster info:\t"
          eksctl get cluster -o yaml
          echo -e "#-----------------------------------#\nNodegroup info:\t"
          eksctl get nodegroup --cluster $CLUSTER_NAME -o yaml
          echo -e "#-----------------------------------#\nCluster info from kubectl:\t"
          kubectl cluster-info

      - name: Deploying simple app to EKS cluster
        run: |
          kubectl apply -f apache-test.yaml